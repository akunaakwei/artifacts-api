/**
 * Artifacts API
 *  Artifacts is an API-based MMO game where you can manage 5 characters to explore, fight, gather resources, craft items and much more.  Website: https://artifactsmmo.com/  Documentation: https://docs.artifactsmmo.com/  OpenAPI Spec: https://api.artifactsmmo.com/openapi.json 
 *
 * OpenAPI spec version: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class CharacterLeaderboardSchema {
    /**
    * Position in the leaderboard.
    */
    'position': number;
    /**
    * Character name.
    */
    'name': string;
    /**
    * Account name.
    */
    'account': string;
    /**
    * Character skin code.
    */
    'skin': string;
    /**
    * Combat level.
    */
    'level': number;
    /**
    * Total XP of your character.
    */
    'totalXp': number;
    /**
    * Mining level.
    */
    'miningLevel': number;
    /**
    * Mining total xp.
    */
    'miningTotalXp': number;
    /**
    * Woodcutting level.
    */
    'woodcuttingLevel': number;
    /**
    * Woodcutting total xp.
    */
    'woodcuttingTotalXp': number;
    /**
    * Fishing level.
    */
    'fishingLevel': number;
    /**
    * Fishing total xp.
    */
    'fishingTotalXp': number;
    /**
    * Weaponcrafting level.
    */
    'weaponcraftingLevel': number;
    /**
    * Weaponcrafting total xp.
    */
    'weaponcraftingTotalXp': number;
    /**
    * Gearcrafting level.
    */
    'gearcraftingLevel': number;
    /**
    * Gearcrafting total xp.
    */
    'gearcraftingTotalXp': number;
    /**
    * Jewelrycrafting level.
    */
    'jewelrycraftingLevel': number;
    /**
    * Jewelrycrafting total xp.
    */
    'jewelrycraftingTotalXp': number;
    /**
    * Cooking level.
    */
    'cookingLevel': number;
    /**
    * Cooking total xp.
    */
    'cookingTotalXp': number;
    /**
    * Alchemy level.
    */
    'alchemyLevel': number;
    /**
    * Alchemy total xp.
    */
    'alchemyTotalXp': number;
    /**
    * The numbers of gold on this character.
    */
    'gold': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "position",
            "baseName": "position",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "account",
            "baseName": "account",
            "type": "string",
            "format": ""
        },
        {
            "name": "skin",
            "baseName": "skin",
            "type": "string",
            "format": ""
        },
        {
            "name": "level",
            "baseName": "level",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalXp",
            "baseName": "total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "miningLevel",
            "baseName": "mining_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "miningTotalXp",
            "baseName": "mining_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "woodcuttingLevel",
            "baseName": "woodcutting_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "woodcuttingTotalXp",
            "baseName": "woodcutting_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "fishingLevel",
            "baseName": "fishing_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "fishingTotalXp",
            "baseName": "fishing_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "weaponcraftingLevel",
            "baseName": "weaponcrafting_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "weaponcraftingTotalXp",
            "baseName": "weaponcrafting_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "gearcraftingLevel",
            "baseName": "gearcrafting_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "gearcraftingTotalXp",
            "baseName": "gearcrafting_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "jewelrycraftingLevel",
            "baseName": "jewelrycrafting_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "jewelrycraftingTotalXp",
            "baseName": "jewelrycrafting_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "cookingLevel",
            "baseName": "cooking_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "cookingTotalXp",
            "baseName": "cooking_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "alchemyLevel",
            "baseName": "alchemy_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "alchemyTotalXp",
            "baseName": "alchemy_total_xp",
            "type": "number",
            "format": ""
        },
        {
            "name": "gold",
            "baseName": "gold",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CharacterLeaderboardSchema.attributeTypeMap;
    }

    public constructor() {
    }
}
